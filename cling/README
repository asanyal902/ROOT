          _  _  _      _         _  _  _   _           _      _  _  _
       _ (_)(_)(_) _  (_)       (_)(_)(_) (_) _       (_)  _ (_)(_)(_) _
      (_)         (_) (_)          (_)    (_)(_)_     (_) (_)         (_)
      (_)             (_)          (_)    (_)  (_)_   (_) (_)    _  _  _
      (_)             (_)          (_)    (_)    (_)_ (_) (_)   (_)(_)(_)
      (_)          _  (_)          (_)    (_)      (_)(_) (_)         (_)
      (_) _  _  _ (_) (_) _  _   _ (_) _  (_)         (_) (_) _  _  _ (_)
         (_)(_)(_)    (_)(_)(_) (_)(_)(_) (_)         (_)    (_)(_)(_)(_)

--------------------------------------------------------------------------------

1. I N S T A L A T I O N   I N S T R U C T I O N S

1.1 Dependencies

   CLING source depends on the LLVM [1] and CLANG [2] headers and libraries.
You will also need CMake [3] >= 2.6.1 to build all of those packages and
subversion [4] to get the source code.

   [1] http://llvm.org
   [2] http://clang.llvm.org
   [3] http://cmake.org
   [4] http://subversion.tigris.org/

1.2 Building LLVM and CLANG

   To build LLVM and CLANG you must:

   * Check out the sources:

     svn co http://llvm.org/svn/llvm-project/llvm/trunk llvm
     cd llvm/tools
     svn co  http://llvm.org/svn/llvm-project/cfe/trunk clang
     cd ..

   * Configure, build and install them:

     mkdir build
     cd build
     cmake -DCMAKE_INSTALL_PREFIX=/some/install/dir -DCMAKE_BUILD_TYPE=Debug ../
     make
     make install

   * To make the installed headers and libraries visible for the CLING build
     system you have to make sure the llvm-config executable is in your path
     and can be executed:

     export PATH=$PATH:/some/install/dir/bin

1.3 Building CLING

   To build CLING you have to check out the sources and build them with the
following commands:

   svn co https://root.cern.ch/svn/root/branches/dev/cling
   cd cling
   cmake -DCMAKE_BUILD_TYPE=Debug .
   make

2. U S A G E

   To interpret a C file type: "./cling test.c". To invoke cling in the
interactive mode type: "cling -i"