/*****************************************************************************
 * Project: BaBar detector at the SLAC PEP-II B-factory
 * Package: RooFitTools
 *    File: $Id: RooDircPdf.rdl,v 1.1 2001/05/14 05:25:05 verkerke Exp $
 * Authors:
 *   WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu
 * History:
 *   02-May-2001 WV Port to RooFitModels/RooFitCore
 *
 * Copyright (C) 2000 Stanford University
 *****************************************************************************/
#ifndef ROO_DIRC_PDF
#define ROO_DIRC_PDF

#include "RooFitCore/RooAbsPdf.hh"
#include "RooFitCore/RooRealProxy.hh"

class RooRealVar;

class RooDircPdf : public RooAbsPdf {
public:
  RooDircPdf(const char *name, const char *title, 		       
	     RooAbsReal& _drcMtm,      RooAbsReal& _thetaC, 
	     RooAbsReal& _refraction,  RooAbsReal& _mass, 
	     RooAbsReal& _otherMass,   RooAbsReal& _coreMean,  RooAbsReal& _coreSigma, 
	     RooAbsReal& _tailMean,    RooAbsReal& _tailSigma, RooAbsReal& _relNorm,
	     Bool_t milliRadians = kFALSE) ;
  RooDircPdf(const RooDircPdf& other, const char* name=0) ;
  virtual TObject* clone() const { return new RooDircPdf(*this); }
  inline virtual ~RooDircPdf() { }

  // WVE - This is cheating, this PDF is not normalized.
  //       Making it so, would require major work, and may not be necessary 
  //       for the current analysis.
  virtual Bool_t isSelfNormalized() const { return kTRUE ; }

protected:

  RooRealProxy drcMtm ;
  RooRealProxy thetaC ;     
  RooRealProxy refraction ; 
  RooRealProxy mass ;       
  RooRealProxy otherMass ;  
  RooRealProxy coreMean ;
  RooRealProxy coreSigma ;
  RooRealProxy tailMean ;
  RooRealProxy tailSigma ;
  RooRealProxy relNorm ; 
  Bool_t _milliRadians ;
  
  Double_t evaluate() const ;

private:

  ClassDef(RooDircPdf,0) // Dirc PDF
};

#endif
