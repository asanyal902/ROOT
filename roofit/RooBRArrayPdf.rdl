/*****************************************************************************
 * Project: BaBar detector at the SLAC PEP-II B-factory
 * Package: RooFitModels
 *    File: $Id: RooBRArrayPdf.rdl,v 1.4 2001/08/02 21:40:04 verkerke Exp $
 * Authors:
 *   JB, John Back, Queen Mary College, Univ London, jback@slac.stanford.edu
 * History:
 *   19-Jun 2001 JB Port to RooFitCore/RooFitModels
 *
 * Copyright (C) 2001 Queen Mary College, Univ London.
 *****************************************************************************/
#ifndef ROO_BR_ARRAY_PDF
#define ROO_BR_ARRAY_PDF

#include "RooFitCore/RooAbsPdf.hh"
#include "RooFitCore/RooArgSet.hh"
#include "TList.h"

class RooBRArrayPdf : public RooAbsPdf {
public:
  RooBRArrayPdf(const char *name, const char *title);
  RooBRArrayPdf(const char *name, const char *title,
                const RooArgSet& pdfArray, const RooArgSet& coefArray);
  RooBRArrayPdf(const RooBRArrayPdf& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooBRArrayPdf(*this,newname) ; }
  virtual ~RooBRArrayPdf() ;

  void addPdf(RooAbsPdf& pdf, RooAbsReal& coef) ;

  virtual Bool_t checkDependents(const RooArgSet* nset) const ;	

  virtual Bool_t canBeExtended() const { return kTRUE ;}
  virtual Double_t expectedEvents() const; 
 
  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& numVars) const ;
  Double_t analyticalIntegral(Int_t code) const ;
  Bool_t selfNormalized() const { return kTRUE ; }

protected:

  TList _pdfProxyList ;
  TList _coefProxyList ;

  Double_t evaluate() const;
  virtual Double_t extendedTerm(UInt_t observedEvents) const;
  
private:

  ClassDef(RooBRArrayPdf,0) // PDF representing a sum of PDFs for BR measurements
};

#endif
