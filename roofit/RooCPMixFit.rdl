/*****************************************************************************
 * Project: BaBar detector at the SLAC PEP-II B-factory
 * Package: RooFitModels
 *    File: $Id: RooCPMixFit.rdl,v 1.4 2002/02/08 22:58:39 verkerke Exp $
 * Authors:
 *   WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu
 * History:
 *   17-Oct-2001 WV Created initial version
 *
 *  NOTE: DO NOT COMMIT CHANGES TO THIS FILE WITHOUT CONSULTING THE AUTHOR
 *
 *
 * Copyright (C) 2001 University of California
 *****************************************************************************/

#ifndef ROO_CPMIX_FIT
#define ROO_CPMIX_FIT

class RooRealVar ;
class RooCategory ;
class RooAbsReal ;
class RooSuperCategory ;
class RooThresholdCategory ;
class RooMappedCategory ;
class RooResolutionModel ;
class RooAbsPdf ;
class RooDataSet ;
class RooCustomizer ;
class RooSimultaneous ;
class RooStringVar ;
class RooUnblindPrecision ;
class RooFormulaVar ;
#include "RooFitCore/RooArgSet.hh" 
#include "RooFitCore/RooArgList.hh" 


class RooCPMixFit 
{
public:
  RooCPMixFit(const char* blindString="DummyDefaultBlindingString",Double_t cval=0,Double_t sigma=0) ;
  ~RooCPMixFit() ;

  RooDataSet* loadAsciiFiles(const char* asciiFileList, const char* commonPath="", const char* opt="q") ;
  const RooArgSet& protoPdfSet() ;

protected:

  void initDataVars() ;
  void buildDeltatPdfs() ;
  void buildSelectionPdfs() ;
  void buildPdfPrototypes() ;
  void defineBDecayModes(RooCategory& cat) ;

  // Constants 
  RooRealVar 
    *zero,*half,*one ;

  // List owning all of the components below
  RooArgList _owned ;

  TString _blindString ;
  Double_t _cval, _sigma ;

public:

  // Data set variables
  RooRealVar 
    *dtReco,*dtErr,*zRecTrue,*dzTrue,*zUpsTrue,*dtTrue,*field08,
    *qKstar,*qtr,*ftr,*pTagB0,*pTagB0Tru,*pRecB0,*pRecB0Tru,*field17,
    *pSig,*pType1,*pType2,*pType3,*pType4,*pType5,*pType6,*pType7,*pType8,
    *deltaE,*mB,*runNumber ;
  RooCategory
    *onOffRes, *tagCatRaw, *brecMode ;
  RooStringVar
    *tstamph, *tstampl ;

  // Dataset derived variables
  RooCategory 
    *mixState,*tagFlav,*tagCat,*tagCatN,*runBlock,*physCat ;
  RooAbsReal 
    *mixProb ;

  RooArgList asciiDataVars ;
  RooArgSet  selDataVars ;

  // Dataset functions
  RooThresholdCategory 
    *mixState_func,*runBlock_func,*tagFlav_func ;
  RooMappedCategory 
    *tagCat_func,*tagCatN_func,*tagCatL,*physCat_func ;

  // List owning all of the components below
  RooArgList _pdfProtoOwner ;

  // Deltat PDF prototype parameters
  RooRealVar *sigC_bias,*sigT_bias,*sigC_scfa,*sigT_scfa,*sigT_rlif,*sigC_frac,*sigO_frac,
    *bkgC_bias,*bkgC_scfa,*bkgC_frac,*outl_bias,*outl_scfa,*sig_tauB,
    *bgC_tauB,*bgL_tauB,*bgKl_tauB,*dm,*sig_eta0,*sig_eta1,*bgC_eta,*bgL_eta,*bgP_eta,*bgP_f,
    *bgC_f,*gold_cpev,*psikl_cpev,*psikstar_cpev,*psix_cpev,*sin2b,*alambda,*effratio,*sig_deta,
    *kbgC_scfa,*kbgC_bias,*kbgC_frac,*kbgT_scfa,*kbgT_bias,*kbgO_frac,
    *klSig_frac,*klBgCcK_frac,*klKstBg_frac,*klKshBg_frac,*klNPLBg_frac,*klNPPBg_frac,*klPsxBg_frac ;

  RooAbsReal
    *sig_eta ;

  // Sin2beta blinding components
  RooUnblindPrecision *sin2b_ub ;
  RooCategory *s2b_bs ;

  // Deltat PDF protytype components
  RooResolutionModel 
    *bkgC_gauss,*kbgC_gauss,*kbgT_gauss,*sigC_gauss,*sigT_gauss,*outl_gauss,*sigResModel,*bkgResModel,*kbgResModel,*sigT_gexp ;
  RooAbsPdf  
    *bmixSigModel,*bmixBgCModel,*bmixBgLModel,*bmixBgPModel,*dtSigBMix,*dtBkgBMix,
    *goldSigModel,*goldBgCModel,*goldBgLModel,*goldBgPModel,*dtSigGold,*dtBkgGold,
    *dtSigKlong,*dtBgKstKlong,*dtBgKshKlong,*dtBgNcpKlong,*dtBgLKlong,*dtBgPKlong,
    *dtBgPsxKlong ;

  // BMass PDF prototype parameters
  RooRealVar 
    *mbMean,*mbWidth,*mbMax,*argPar,*mbSigFrac ;

  // BMass PDF protytype components
  RooAbsPdf  
    *mbSig,*mbBkg,*mbPdf ;

  // DeltaE PDF prototype parameters
  RooRealVar 
    *deGMeanSig,*deGWidthSig,*deACutoffSig,*deAKappaSig,*deGFracSig,*dePol1IPbg,
    *dePol2IPbg,*dePol3IPbg,*dePol4IPbg,*deACutoffSBbg,*deAKappaSBbg,*deGMeanKSBg,
    *deGWidthKSBg,*deACutoffKSBg,*deAKappaKSBg,*deGFracKSBg,*deG2MeanSig,*deG2WidthSig,
    *deG2FracSig ;

  // DeltaE PDF prototype components
  RooAbsReal
    *dePrime, *deMeV ;
  RooAbsPdf
    *deGaussSig,*deGauss2Sig,*deArgusSig,*deSigKlong,*deIPbgKlong,*deSBbgKlong,*deGaussKSBg,*deArgusKSBg,*deKSBgKlong ;
  
  RooAbsPdf
    *deSigKlongRaw,*deSBbgKlongRaw,*deIPbgKlongRaw,*deKSBgKlongRaw ;
    

  // Master PDFs
  RooAbsPdf
    *BMixingSig,*BMixingBkg,*BMixing,
    *CPGoldSig,*CPGoldBkg,*CPGold,
    *KLongSig,*KLongCcKBg,*KLongKstBg,*KLongKshBg,*KLongOthBg,*KLongNPLBg,*KLongNPPBg,*KLongPsxBg,*KLong ;

  RooArgSet _pdfProtoSet ;

protected:

  ClassDef(RooCPMixFit,0)
} ;

#endif

