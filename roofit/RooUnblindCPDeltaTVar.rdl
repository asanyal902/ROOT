/*****************************************************************************
 * Project: BaBar detector at the SLAC PEP-II B-factory
 * Package: RooFitTools
 *    File: $Id: RooUnblindCPDeltaTVar.rdl,v 1.8 2001/08/03 18:13:02 verkerke Exp $
 * Authors:
 *   WV, Wouter Verkerke, University of California Santa Barbara, verkerke@slac.stanford.edu
 * History:
 *   05-Mar-2001 WV Created initial version
 *
 * Copyright (C) 2001 University of California
 *****************************************************************************/
#ifndef ROO_UNBLIND_CPDELTAT_VAR
#define ROO_UNBLIND_CPDELTAT_VAR

#include "RooFitCore/RooAbsRealLValue.hh"
#include "RooFitCore/RooRealProxy.hh"
#include "RooFitCore/RooCategoryProxy.hh"
#include "RooFitModels/RooBlindTools.hh"

class RooUnblindCPDeltaTVar : public RooAbsRealLValue {
public:
  // Constructors, assignment etc
  RooUnblindCPDeltaTVar() ;
  RooUnblindCPDeltaTVar(const char *name, const char *title, 
			const char *blindString,
			RooAbsRealLValue& deltat, RooAbsCategory& tag, 
			RooAbsCategory& blindState);
  RooUnblindCPDeltaTVar(const RooUnblindCPDeltaTVar& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooUnblindCPDeltaTVar(*this,newname); }  
  virtual ~RooUnblindCPDeltaTVar();

  // I/O streaming interface (machine readable)
  virtual Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose=kFALSE) ;
  virtual void writeToStream(ostream& os, Bool_t compact) const ;

  // Printing interface (human readable)
  virtual void printToStream(ostream& stream, PrintOption opt=Standard, TString indent="") const ;

  // LValue interface
  virtual void setVal(Double_t value) ;
  virtual Double_t getFitMin() const ;
  virtual Double_t getFitMax() const ;
  virtual Bool_t isIntegrationSafeLValue(const RooArgSet* nset) const { return kTRUE ; }

protected:

  // Only PDFs can access the unblinded values
  friend class RooAbsPdf ;
  
  // Function evaluation
  virtual Double_t evaluate() const ;

  virtual Bool_t isValid() const ;
  virtual Bool_t isValid(Double_t value, Bool_t verbose=kFALSE) const ;

  RooRealProxy     _deltat ;
  RooCategoryProxy _tag ;
  RooCategoryProxy _state ;
  RooBlindTools _blindEngine ;

  ClassDef(RooUnblindCPDeltaTVar,1) // CP-Deltat unblinding transformation
};

#endif
