/*****************************************************************************
 * Project: BaBar detector at the SLAC PEP-II B-factory
 * Package: RooFitModels
 *    File: $Id: RooDMixDecayHadronic.rdl,v 1.2 2002/04/03 08:25:58 mwilson Exp $
 * Authors:
 *   MW, Michael Wilson, UC Santa Cruz, mwilson@slac.stanford.edu
 * History:
 *   08-Mar-2002 MW Created initial version
 *
 * Copyright (C) 2002 University of California
 *****************************************************************************/

#ifndef ROO_DMIX_DECAY_HADRONIC
#define ROO_DMIX_DECAY_HADRONIC

#include "RooFitCore/RooConvolutedPdf.hh"
#include "RooFitCore/RooAbsReal.hh"
#include "RooFitCore/RooResolutionModel.hh"
#include "RooFitCore/RooRealProxy.hh"
#include "RooFitCore/RooCategoryProxy.hh"

class RooDMixDecayHadronic : public RooConvolutedPdf {
public:

  enum D0Flavor { D0bar = -1, D0 = 1 };

  inline RooDMixDecayHadronic() { }
  RooDMixDecayHadronic(const char *name, const char *title,
			    RooRealVar& t_, RooAbsReal& tau_, RooAbsCategory& flavor_,
			    RooAbsReal& R_DCS_, RooAbsReal& yprime_, RooAbsReal& xprime_,
			    RooAbsReal& A_D_, RooAbsReal& A_M_, RooAbsReal& phi_,
			    const RooResolutionModel& model_);
  RooDMixDecayHadronic(const RooDMixDecayHadronic& other, const char *name=0);
  virtual TObject* clone(const char *newname) const { return new RooDMixDecayHadronic(*this,newname); }
  virtual ~RooDMixDecayHadronic();

  Double_t coefficient(Int_t basisIndex) const ;

  Int_t getCoefAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars) const ;
  Double_t coefAnalyticalIntegral(Int_t coef, Int_t code) const ;

  Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK=kTRUE) const;
  void initGenerator(Int_t code);
  void generateEvent(Int_t code);

protected:

  RooRealProxy     t;
  RooRealProxy     tau;
  RooRealProxy     yprime;
  RooRealProxy     xprime;
  RooRealProxy     R_DCS;

  RooRealProxy     A_D;         // CP violation in decay
  RooRealProxy     A_M;         // CP violation in mixing
  RooRealProxy     phi;         // CP violation in the interference between mixing and decay

  RooCategoryProxy flavor;      // D0 or D0bar

  Int_t basisConst;
  Int_t basisLin;
  Int_t basisQuad;

  // variables for generating Toy MC

  Double_t genFlavorFrac;       //! do not persist
  Double_t genMaxT;             //! do not persist
  Double_t genMaxCoeff;         //! do not persist
  Double_t genMaxLife;          //! do not persist
  Double_t genMaxArea;          //! do not persist

  struct MaxProbError {
    Double_t max, accept, tval, tTerm, t2Term;
    MaxProbError(Double_t max_, Double_t accept_, Double_t tval_, Double_t t, Double_t t2)
    { max = max_; accept = accept_; tval = tval_; tTerm = t; t2Term = t2; }
  };

  ClassDef(RooDMixDecayHadronic,1) // Hadronic D mixing wrong-sign decay PDF with CP violation
};

#endif
