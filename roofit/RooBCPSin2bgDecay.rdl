/*****************************************************************************
 * Project: BaBar detector at the SLAC PEP-II B-factory
 * Package: RooFitModels
 *    File: $Id: RooBCPSin2bgDecay.rdl,v 1.3 2002/04/09 22:58:35 walkowia Exp $
 * Authors:
 *   WW, Wolfgang Walkowiak, UC Santa Cruz, walkowia@slac.stanford.edu
 * History:
 *   05-Mar-2002 WW Created initial version
 *   12-Mar-2002 WW Added alphaD0 and rhoD0
 *   13-Mar-2002 WW Added 2nd constructor for offset type scheme
 *   09-Apr-2002 WW Inverted sign infront of the sin() term
 *
 * Copyright (C) 2001 University of California
 *****************************************************************************/
#ifndef ROO_BCP_SIN2BG_DECAY
#define ROO_BCP_SIN2BG_DECAY

#include "RooFitCore/RooConvolutedPdf.hh"
#include "RooFitCore/RooRealProxy.hh"
#include "RooFitCore/RooCategoryProxy.hh"

class RooBCPSin2bgDecay : public RooConvolutedPdf {
public:
    
    enum DecayType { SingleSided, DoubleSided, Flipped };
    
    // Constructors, assignment etc
    inline RooBCPSin2bgDecay() { }
    RooBCPSin2bgDecay(const char *name, const char *title, 
		      RooRealVar& t, 
		      RooAbsCategory& mixState,
		      RooAbsCategory& tagFlav,
		      RooAbsReal& tau, RooAbsReal& dm,
		      RooAbsReal& avgMistag,
		      RooAbsReal& absLambda, 
		      RooAbsReal& argLambdaPlus,
		      RooAbsReal& argLambdaMinus, 
		      RooAbsReal& delMistag,
		      RooAbsReal& alphaD0, RooAbsReal& rhoD0,
		      const RooResolutionModel& model, 
		      DecayType type=DoubleSided) ;
    
     RooBCPSin2bgDecay(const char *name, const char *title, 
		       RooRealVar& t, 
		       RooAbsCategory& mixState,
		       RooAbsCategory& tagFlav,
		       RooAbsReal& tau, RooAbsReal& dm,
		       RooAbsReal& avgMistag,
		       RooAbsReal& absLambda,
		       RooAbsReal& argLambdaPlus,
		       RooAbsReal& argLambdaMinus, 
		       RooAbsReal& delMistag,
		       RooAbsReal& offsetD0,
		       const RooResolutionModel& model, 
		       DecayType type=DoubleSided) ;
    
   RooBCPSin2bgDecay(const RooBCPSin2bgDecay& other, const char* name=0);

    inline virtual TObject* clone(const char* newname) const 
	{ return new RooBCPSin2bgDecay(*this,newname) ; }
    
    virtual ~RooBCPSin2bgDecay();
    
    virtual Double_t coefficient(Int_t basisIndex) const ;
    
    virtual Int_t getCoefAnalyticalIntegral(RooArgSet& allVars, 
					    RooArgSet& analVars) const ;
    virtual Double_t coefAnalyticalIntegral(Int_t coef, Int_t code) const ;
    
    Int_t getGenerator(const RooArgSet& directVars, 
		     RooArgSet &generateVars) const;
    void initGenerator(Int_t code) ;
    void generateEvent(Int_t code) ;
    
private:

    void calcInternals(Double_t& dil, Double_t& dw, Double_t& off) const ;
    void chooseBase(DecayType type, RooAbsReal& tau, RooAbsReal& dm) ;

protected:
    
    RooRealProxy _absLambda ;
    RooRealProxy _argLambdaPlus ;
    RooRealProxy _argLambdaMinus ;
    RooRealProxy _avgMistag ;
    RooRealProxy _delMistag ;
    RooRealProxy _alphaD0 ;
    RooRealProxy _rhoOffD0 ;
    RooRealProxy _t ;
    RooRealProxy _tau ;
    RooRealProxy _dm ;
    RooCategoryProxy _tagFlav ;
    RooCategoryProxy _mixState ;
    Double_t _genFlavFrac ;
    Double_t _genMixFrac ;
    Double_t _genFlavFracMix ;
    Double_t _genFlavFracUnmix ;
    Bool_t   _offsetImp;

    DecayType _type ;
    Int_t _basisExp ;
    Int_t _basisSin ;
    Int_t _basisCos ;
    
    ClassDef(RooBCPSin2bgDecay,1) // B Mixing decay PDF with sin(2b+g) 
};

#endif





