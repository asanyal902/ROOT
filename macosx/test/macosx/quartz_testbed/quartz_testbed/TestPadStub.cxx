#include "TestPadStub.h"

//______________________________________________________________________________
void TestPadStub::Close(Option_t *)
{
}

//______________________________________________________________________________
void TestPadStub::AddExec(const char *, const char *)
{
}

//______________________________________________________________________________
void TestPadStub::CopyPixmap()
{
}

//______________________________________________________________________________
void TestPadStub::CopyPixmaps()
{
}

//______________________________________________________________________________
void TestPadStub::DeleteExec(const char *)
{
}

//______________________________________________________________________________
void TestPadStub::Divide(Int_t, Int_t, Float_t, Float_t, Int_t)
{
}

//______________________________________________________________________________
void TestPadStub::Draw(Option_t *)
{
}

//______________________________________________________________________________
void TestPadStub::DrawClassObject(const TObject *, Option_t *)
{
}

//______________________________________________________________________________
void TestPadStub::SetBatch(Bool_t)
{
}

//______________________________________________________________________________
Int_t TestPadStub::GetCanvasID() const
{
   return 0;
}

//______________________________________________________________________________
TCanvasImp *TestPadStub::GetCanvasImp() const
{
   return 0;
}

//______________________________________________________________________________
Int_t TestPadStub::GetEvent() const
{
   return 0;
}

//______________________________________________________________________________
Int_t TestPadStub::GetEventX() const
{
   return 0;
}

//______________________________________________________________________________
Int_t TestPadStub::GetEventY() const
{
   return 0;
}

//______________________________________________________________________________
Int_t TestPadStub::GetNumber() const
{
   return 0;
}

//______________________________________________________________________________
TVirtualPad *TestPadStub::GetPad(Int_t) const
{
   return 0;
}

//______________________________________________________________________________
TObject *TestPadStub::GetPadPointer() const
{
   return 0;
}

//______________________________________________________________________________
TVirtualPad *TestPadStub::GetPadSave() const
{
   return 0;
}

//______________________________________________________________________________
TVirtualPad *TestPadStub::GetSelectedPad() const
{
   return 0;
}

//______________________________________________________________________________
TObject *TestPadStub::GetView3D() const
{
   return 0;
}

//______________________________________________________________________________
void TestPadStub::ResetView3D(TObject *)
{
}

//______________________________________________________________________________
TCanvas *TestPadStub::GetCanvas() const
{
   return 0;
}

//______________________________________________________________________________
TVirtualPad *TestPadStub::GetVirtCanvas() const
{
   return 0;
}

//______________________________________________________________________________
Int_t TestPadStub::GetPadPaint() const
{
   return 0;
}

//______________________________________________________________________________
Int_t TestPadStub::GetPixmapID() const
{
   return 0;
}

//______________________________________________________________________________
Bool_t TestPadStub::HasCrosshair() const
{
   return kFALSE;
}

//______________________________________________________________________________
void TestPadStub::SetCrosshair(Int_t)
{
}

//______________________________________________________________________________
void TestPadStub::SetAttFillPS(Color_t, Style_t)
{
}

//______________________________________________________________________________
void TestPadStub::SetAttLinePS(Color_t, Style_t, Width_t)
{
}

//______________________________________________________________________________
void TestPadStub::SetAttMarkerPS(Color_t, Style_t, Size_t)
{
}

//______________________________________________________________________________
void TestPadStub::SetAttTextPS(Int_t, Float_t, Color_t, Style_t, Float_t)
{
}

//______________________________________________________________________________
void TestPadStub::PaintBorderPS(Double_t, Double_t, Double_t, Double_t, Int_t, Int_t, Int_t, Int_t)
{
}

//______________________________________________________________________________
Int_t TestPadStub::GetGLDevice()
{
   return 0;
}

//______________________________________________________________________________
void TestPadStub::SetCopyGLDevice(Bool_t)
{
}

//______________________________________________________________________________
void TestPadStub::Pop()
{
}

//______________________________________________________________________________
void TestPadStub::Print(const char *) const
{
}

//______________________________________________________________________________
void TestPadStub::Print(const char *, Option_t *)
{
}

//______________________________________________________________________________
TVirtualPad *TestPadStub::GetMother() const
{
   return 0;
}

//______________________________________________________________________________
TObject *TestPadStub::CreateToolTip(const TBox *, const char *, Long_t)
{
   return 0;
}

//______________________________________________________________________________
void TestPadStub::DeleteToolTip(TObject *)
{
}

//______________________________________________________________________________
void TestPadStub::ResetToolTip(TObject *)
{
}

//______________________________________________________________________________
void TestPadStub::CloseToolTip(TObject *)
{
}

//______________________________________________________________________________
void TestPadStub::SetToolTipText(const char *, Long_t)
{
}

//______________________________________________________________________________
void TestPadStub::HighLight(Color_t, Bool_t)
{
}

//______________________________________________________________________________
Color_t TestPadStub::GetHighLightColor() const
{
   return 0;
}

//______________________________________________________________________________
void TestPadStub::ls(Option_t *) const
{
}

//______________________________________________________________________________
void TestPadStub::Modified(Bool_t)
{
}

//______________________________________________________________________________
Bool_t TestPadStub::OpaqueMoving() const
{
   return kFALSE;
}

//______________________________________________________________________________
Bool_t TestPadStub::OpaqueResizing() const
{
   return kFALSE;
}

//______________________________________________________________________________
void TestPadStub::PaintModified()
{
}

//______________________________________________________________________________
void TestPadStub::RecursiveRemove(TObject *)
{
}

//______________________________________________________________________________
void TestPadStub::SaveAs(const char *,Option_t *) const
{
}

//______________________________________________________________________________
void TestPadStub::SetCanvas(TCanvas *)
{
}

//______________________________________________________________________________
void TestPadStub::SetCanvasSize(UInt_t, UInt_t)
{
}

//______________________________________________________________________________
void TestPadStub::SetCursor(ECursor)
{
}

//______________________________________________________________________________
void TestPadStub::SetDoubleBuffer(Int_t)
{
}

//______________________________________________________________________________
void TestPadStub::SetName(const char *)
{
}

//______________________________________________________________________________
void TestPadStub::SetTitle(const char *)
{
}

//______________________________________________________________________________
void TestPadStub::SetSelected(TObject *)
{
}

//______________________________________________________________________________
void TestPadStub::Update()
{
}

//______________________________________________________________________________
TObject *TestPadStub::WaitPrimitive(const char *, const char *)
{
   return 0;
}

//______________________________________________________________________________
void TestPadStub::ReleaseViewer3D(Option_t *)
{
}

//______________________________________________________________________________
Bool_t TestPadStub::HasViewer3D() const
{
   return kFALSE;
}
