#!/usr/bin/rpm
######################################################################
#
# Preamble 
#
# Macro definitions
%define ver    		@version@
%define rel    		1
%define _prefix         /usr
%define _sysconfdir     /etc
%define _defaultdocdir  %_prefix/share/doc/root-%ver
%define _unpackaged_files_terminate_build  0

######################################################################
#
# Header 
#
Name:         root
Version:      %{ver}
Release:      %{rel}
License:      GNU Lesser General Public License
Packager:     Christian Holm Christensen <cholm@nbi.dk>
Distribution: Applications/Physics
Vendor:       ROOT Team
URL:          http://root.cern.ch
Source:       ftp://root.cern.ch/root/root_v%{ver}.source.tar.gz
Group:        Applications/Physics
BuildRoot:    /tmp/rootrpm
Summary:      Numerical data analysis framework (OO)
BuildRequires: XFree86-devel, pcre-devel, freetype-devel, openssl-devel
@builddepends@
Requires:     @pkglist@
#
# Over all description - not used, but required
#
%description
This package is a meta package to ensure the installation of all
possible ROOT packages on this system. 

ROOT web-site: http://root.cern.ch

%files 
%defattr(-,root,root)
%{_defaultdocdir}/README

######################################################################
#
# Package building section 
#
# Prepare sources - make package output dir (e.g. ../i686)
%prep
%setup -n %{name}

#---------------------------------------------------------------------
# The actual build
#
# Configure the ROOT source tree. You may want to disable some
# features here, though it is STRONGLY DEPRECIATED. 
#
#
%build
sovers=`echo %ver | sed 's/\([[:digit:]]*\.[[:digit:]]*\)\.[[:digit:]]*/\1/'`
./configure --enable-table				\
	    --enable-ruby				\
	    --enable-qt					\
	    --enable-pythia				\
	    --enable-xrootd				\
	    --enable-shared				\
	    --enable-soversion				\
	    --enable-explicitlink			\
    	    --enable-mathmore				\
            --enable-mathcore                           \
            --enable-minuit2                            \
	    --disable-rpath				\
	    --disable-afs				\
	    --disable-srp				\
	    --disable-builtin-freetype			\
	    --disable-builtin-pcre			\
	    --prefix=%_prefix 				\
	    --libdir=%_prefix/lib/root/${sovers}	\
	    --mandir=%_prefix/share/man/man1		\
	    --docdir=%_defaultdocdir			\
	    --cintincdir=%_prefix/lib/root/${sovers}/cint \
	    --etcdir=%_sysconfdir/root			\
            --with-sys-iconpath=%_datadir/pixmaps 	

# Usage of external afterimage disabled until such a time when ROOT can use 
# the normal libAfterImage
#	    --disable-builtin-afterimage		\

make 
make cintdlls

#---------------------------------------------------------------------
# The installation 
#
# We install in `pwd`/build/package/rpm so that we do not disturb
# the system, and so that non-priviliged user may build the packages. 
#
%install
rm -rf ${RPM_BUILD_ROOT}
make install DESTDIR=${RPM_BUILD_ROOT}
find ${RPM_BUILD_ROOT} -name "CVS" | xargs rm -fr 

# Make links from version specific directory to `normal' libary dir
sovers=`echo %ver | sed 's/\([[:digit:]]*\.[[:digit:]]*\)\.[[:digit:]]*/\1/'`
(cd ${RPM_BUILD_ROOT}%{_prefix}/lib/root && \
    for i in ${sovers}/*.so.${sovers} ${sovers}/libXrd*.so ; do  \
        ln -sf $i . ; \
        ln -sf $i `basename $i .${sovers}` ; done; \
    ln -sf ${sovers}/cint .)

# Rename proofserv, xrdgsiproxy, and xrdpwdadmin in /usr/bin 
# to end in `.bin' and make wrapper script in /usr/bin 
for i in proofserv xrdgsiproxy xrdpwdadmin ; do 		
  if test -f ${RPM_BUILD_ROOT}%{_prefix}/bin/$i && 	\
     test -f build/package/common/$i.in ; then 		
    mv ${RPM_BUILD_ROOT}%{_prefix}/bin/$i 		\
	 ${RPM_BUILD_ROOT}%{_prefix}/bin/$i.bin 
    sed -e 's,@prefix@,%{_prefix},g'			\
	-e 's,@libvers@,${sovers},g'			\
	< build/package/common/$i.in			\
	> ${RPM_BUILD_ROOT}%{_prefix}/bin/$i
    chmod 755 ${RPM_BUILD_ROOT}%{_prefix}/bin/$i 
  fi
done 


# Prepare SYSV init scripts 
mkdir -p ${RPM_BUILD_ROOT}/%{_sysconfdir}/rc.d/init.d
cp -a etc/daemons/rootd.rc.d \
    ${RPM_BUILD_ROOT}/%{_sysconfdir}/rc.d/init.d/rootd
cp -a etc/daemons/proofd.rc.d \
    ${RPM_BUILD_ROOT}/%{_sysconfdir}/rc.d/init.d/proofd

# Make the empty proof log file 
mkdir -p ${RPM_BUILD_ROOT}/%{_prefix}/share/root/proof/log
touch ${RPM_BUILD_ROOT}/%{_prefix}/share/root/proof/log/proof.log 

# Make package lists 
mkdir -p rpm
build/package/lib/makelists.sh rpm ${RPM_BUILD_ROOT} \
    %ver %_prefix %_sysconfdir %_defaultdocdir
echo "%attr(0755, root, root) %{_sysconfdir}/rc.d/init.d/rootd" \
    >> rpm/root-rootd.install
echo "%attr(0755, root, root) %{_sysconfdir}/rc.d/init.d/proofd" \
    >> rpm/root-proofd.install


# This is to discover weather the man pages are compressed before they
# are moved into the packages - ugly hack, but there's no 2 ways about it
EXT=
comp=$(echo "%{__os_install_post}" | sed -n 's/[[:space:]]*\([^[:space:]]*compress[^[:space:]]*\).*/\1/p')
if test "x$comp" = "x" ; then 
    :
else
    EXT=$(grep -e '^[[:space:]]*COMPRESS_EXT=' $comp  | sed 's/^\([[:space:]]*COMPRESS_EXT=\)\(.*\)/\2/')
fi
# Now fix up the file lists
for i in rpm/*.install ; do 
    if test ! -f $i ; then continue ; fi
    echo "Fixing $i"
    sed -e "s/\.1$/.1${EXT}/g" \
	-e "s,%_sysconfdir,%config %_sysconfdir," \
	-e "s,%_defaultdocdir,%doc %_defaultdocdir," \
	< $i > $i.tmp
    mv $i.tmp $i
done

# Remove bad files 
rm -f ${RPM_BUILD_ROOT}%{_sysconfdir}/root/rootd		\
      ${RPM_BUILD_ROOT}%{_prefix}/include/root/config.h		\
      ${RPM_BUILD_ROOT}%{_prefix}/lib/root/libAfterImage.a	\
      ${RPM_BUILD_ROOT}%{_prefix}/share/man/man1/rlibmap.1

# -------------------------------------------------------------------
# Clean up
#
%clean
rm -rf $RPM_BUILD_ROOT

######################################################################
#
# Sub packages
#



